{"version":3,"file":"static/webpack/static/development/pages/skill.js.b902ed22e5c7f28ac877.hot-update.js","sources":["webpack:///./src/pages/Skill.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport styled, {css} from 'styled-components';\nimport paginate from 'paginate-array';\nimport arraySort from 'array-sort';\nimport {skillColumns} from '../commons/list';\nimport {backendURL} from '../commons/const';\nimport {getDataContains} from '../commons/query';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Pagination from '@material-ui/lab/Pagination';\nimport Grid from '@material-ui/core/Grid';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {red, blue, brown, green} from '@material-ui/core/colors';\n\nimport NpcTable from './components/NpcTable';\n\nconst columns = skillColumns;\nconst defaultFilter = ['eng_name', \"viet_name\", \"id\", \"drop_1\", \"drop_2\", \"drop_3\", \"drop_4\", \"drop_5\", \"drop_6\"];\n\nconst display = 100;\nconst columnsKey = Object.keys(columns);\n\nlet field = {\n\tsearch: \"\"\n};\n\nvar selectingFilter = false;\n\nexport default (props) => {\n\tconst classes = useStyles();\n\tconst [data, setData] = React.useState([]);\n\tconst [filteredData, setFilteredData] = React.useState([]);\n\tconst [filter, setFilter] = React.useState(defaultFilter);\n\tconst [items, setItems] = React.useState({\n\t\tcurrentPage: 1,\n\t\tperPage: 100,\n\t\ttotal: 100,\n\t\ttotalPages: 1,\n\t\tdata: []\n\t});\n\n\tconst [columnSort, setColumnSort] = React.useState(columns);\n\n\tconst nextPage = async (page, paginateData) => {\n\t\tconst paginateItems = paginate(paginateData, page, display);\n\t\tawait setItems(paginateItems);\n\t}\n\n\tconst handlePaginationChange = async (value, filteredData) => {\n    await nextPage(value, filteredData);\n  };\n\n\tconst fetchData = () => {\n\t\tfetch(backendURL + '/static/datas/skill.json')\n\t\t.then((res) => res.json())\n\t\t.then(async (res) => {\n\t\t\tawait setData(res);\n\t\t\tnextPage(1, res);\n\t\t\tsetFilteredData(res);\n\t\t})\n\t}\n\n\tconst onSearch = (e) => {\n\t\tif(e.key == 'Enter'){\n\n\t\t\tconst searchValue = field.search;\n\n\t\t\tif(!searchValue) {\n\t\t\t\tnextPage(1, data);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst query = getDataContains(searchValue, {data: data}, filter);\n\n\t\t\tnextPage(1, query);\n\t\t\tsetFilteredData(query);\n\t\t}\n\t}\n\n\tconst updateField = (e, key) => {\n\t\tfield[key] = e.target.value;\n\t}\n\n\tconst onSort = async (key) => {\n\t\tcolumns[key].reverse = !columns[key].reverse;\n\n\t\tvar sorted = arraySort(filteredData, key, {reverse: columns[key].reverse});\n\n\t\tawait setColumnSort(columns);\n\t\tawait nextPage(1, sorted);\n\t\treturn true;\n\t}\n\n\tconst onSelectFilter = async (event) => {\n\t\tif(selectingFilter) return false;\n\t\tselectingFilter = true;\n\t\tawait setFilter(event.target.value);\n\t\tselectingFilter = false;\n\t}\n\n\tconst renderFilter = () => {\n\t\treturn \"Filter\"\n\t}\n\n\tuseEffect(() => {\n\t\tfetchData();\n\t}, []);\n\n\treturn(\n\t<Wrapper>\n\n\t\t<StickContainer>\n\t\t\t<Grid container spacing={1}>\n\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t<Search type=\"text\" placeholder=\"Search\" onChange={(e) => updateField(e, 'search')} onKeyDown={onSearch} /> \n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tmultiple\n\t\t\t\t\t\tvalue={filter}\n\t\t\t\t\t\tonChange={onSelectFilter}\n\t\t\t\t\t\trenderValue={renderFilter}\n\t\t\t\t\t>\n\t\t\t\t\t\t{columnsKey.map((item, key) => (\n\t\t\t\t\t\t\t<MenuItem key={key} value={item}>\n\t\t\t\t\t\t\t\t<Checkbox checked={filter.indexOf(item) > -1} />\n\t\t\t\t\t\t\t\t<ListItemText primary={columns[item].label} />\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Select>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={4} >\n\t\t\t\t\t<Pagination className={classes.pagination} count={items.totalPages} page={items.currentPage} onChange={(event, value) => handlePaginationChange(value, filteredData)} />\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</StickContainer>\n\n\t\t<NpcTable columns={columns}\n\t\t\t\t\t\t\t\tcolumnSort={columnSort}\n\t\t\t\t\t\t\t\tonSort={onSort}\n\t\t\t\t\t\t\t\tcolumnsKey={columnsKey}\n\t\t\t\t\t\t\t\titems={items}\n\t\t\t\t\t\t\t\t/>\n\t</Wrapper>\n\t)\n}\n\nconst Wrapper = styled.div`\n\tpadding: 20px 10px;\n`\n\nconst Search = styled.input`\n\twidth: 100%;\n`\n\nconst StickContainer = styled.div`\n\tbackground: #222;\n\tpadding: 10px;\n\tborder-top: 1px solid #eee;\n\tposition: fixed;\n\twidth: 100%;\n\ttop: auto;\n\tbottom: 0;\n\tleft: 0;\n`\n\nconst Button = styled.button`\n\tmargin: 0 10px;\n`\n\nconst Link = styled.a`\n\tcursor: pointer;\n\tcolor: #fff;\n\ttext-decoration: underline;\n`\n\nconst Sort = styled.span`\n\tdisplay: block;\n\tcursor: pointer;\n`\n\nconst bgRed = red[900];\nconst bgGreen = green[900];\nconst bgBlue = blue[900];\nconst bgBrown = brown[900];\n\nconst useStyles = makeStyles({\n  container: {\n    maxHeight: 'calc(100vh - 170px)',\n\t},\n\tpagination: {\n\t\tjustifyContent: 'flex-end',\n\t\tdisplay: 'flex'\n\t},\n\telement1: {\n\t\tbackground: bgBrown\n\t},\n\telement2: {\n\t\tbackground: bgBlue\n\t},\n\telement3: {\n\t\tbackground: bgRed\n\t},\n\telement4: {\n\t\tbackground: bgGreen\n\t}\n});"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AADA;AAIA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAMA;AACA;AACA;AACA;AACA;AALA;AALA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAHA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAEA;AAFA;AAAA;AACA;AADA;AAIA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAjBA;;;;A","sourceRoot":""}